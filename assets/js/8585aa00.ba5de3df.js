"use strict";(self.webpackChunkmimid_docs=self.webpackChunkmimid_docs||[]).push([[934],{5476:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>h});var o=n(5893),s=n(1151);const r=n.p+"assets/images/ControlsWithGridlines-2ed7e568b55e585ae2cea4c51cdb9d8b.png",i={title:"Settings"},l=void 0,d={id:"settings",title:"Settings",description:"Auto-paste Video URL",source:"@site/docs/settings.mdx",sourceDirName:".",slug:"/settings",permalink:"/settings",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Settings"},sidebar:"sidebar",previous:{title:"How to use",permalink:"/how-to-use"}},a={},h=[{value:"Auto-paste Video URL",id:"auto-paste-video-url",level:2},{value:"Scale Skips by Speed",id:"scale-skips-by-speed",level:2},{value:"Skip Back Auto-Pause",id:"skip-back-auto-pause",level:2},{value:"Slow Speed",id:"slow-speed",level:2},{value:"Delay Between Loops",id:"delay-between-loops",level:2},{value:"Skip Backward Long",id:"skip-backward-long",level:2},{value:"Skip Backward Short",id:"skip-backward-short",level:2},{value:"Skip Forward Short",id:"skip-forward-short",level:2},{value:"Skip Forward Long",id:"skip-forward-long",level:2},{value:"Controls Offset",id:"controls-offset",level:2},{value:"Controls",id:"controls",level:2},{value:"Rows",id:"rows",level:3},{value:"Columns",id:"columns",level:3},{value:"Grid",id:"grid",level:3}];function c(e){const t={admonition:"admonition",em:"em",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"auto-paste-video-url",children:"Auto-paste Video URL"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Mimid will automatically load video URLs you have copied."})}),"\n",(0,o.jsx)(t.p,{children:"This removes the need to manually paste video URLs into the URL bar."}),"\n",(0,o.jsx)(t.h2,{id:"scale-skips-by-speed",children:"Scale Skips by Speed"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Scale skip amounts based on the current player speed."})}),"\n",(0,o.jsx)(t.p,{children:"This makes the number on the skip buttons represent real time, and not player time.\nThis may make the skip buttons feel more natural to you."}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsx)(t.p,{children:"For reference, the YouTube website scales skips by speed, while the YouTube mobile app does not."})}),"\n",(0,o.jsx)(t.h2,{id:"skip-back-auto-pause",children:"Skip Back Auto-Pause"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Automatically pause after you skip backward and return to where you skipped from."})}),"\n",(0,o.jsx)(t.p,{children:"After you skip backward and the player plays until it returns to where you skipped from, the player will automatically pause."}),"\n",(0,o.jsx)(t.p,{children:"This can be useful if you often skip backward, let the song play, and then press pause before you try it on your instrument.\nWith this setting enabled, you don't have to press pause manually."}),"\n",(0,o.jsx)(t.h2,{id:"slow-speed",children:"Slow Speed"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the speed to use when the Slow Speed Button is on."})}),"\n",(0,o.jsx)(t.h2,{id:"delay-between-loops",children:"Delay Between Loops"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the amount of time to pause for before a loop repeats itself."})}),"\n",(0,o.jsx)(t.p,{children:"This can be useful if you want some silence in between loops, in order to try the thing you just heard."}),"\n",(0,o.jsx)(t.h2,{id:"skip-backward-long",children:"Skip Backward Long"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the amount of time that the Skip Backward Long Button skips."})}),"\n",(0,o.jsx)(t.h2,{id:"skip-backward-short",children:"Skip Backward Short"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the amount of time that the Skip Backward Short Button skips."})}),"\n",(0,o.jsx)(t.h2,{id:"skip-forward-short",children:"Skip Forward Short"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the amount of time that the Skip Forward Short Button skips."})}),"\n",(0,o.jsx)(t.h2,{id:"skip-forward-long",children:"Skip Forward Long"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the amount of time that the Skip Forward Long Button skips."})}),"\n",(0,o.jsx)(t.h2,{id:"controls-offset",children:"Controls Offset"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Push the controls lower on the screen."})}),"\n",(0,o.jsx)(t.p,{children:"This can be useful if you have a taller phone and want the controls to be closer to the bottom, for example."}),"\n",(0,o.jsx)(t.h2,{id:"controls",children:"Controls"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Change Mimid's control layout."})}),"\n",(0,o.jsxs)(t.p,{children:["You can change Mimid's control layout through the ",(0,o.jsx)(t.strong,{children:"control layout grid"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"This grid contains cells, which are either set to a button, or are empty.\nThe positioning of these cells determine which buttons appear where.\nFor example, a button in the top-left cell of the grid will cause that button to appear in the top-left corner of the controls."}),"\n",(0,o.jsx)(t.p,{children:"Having multiple cells of the same button next to each other result in a bigger button."}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsx)(t.p,{children:"Multiple cells of the same button must form a rectangular area.\nSo you can't have something like an L-shaped button.\nYou also can't have more than one of each button."})}),"\n",(0,o.jsx)(t.p,{children:"This image shows how the grid relates to the controls."}),"\n",(0,o.jsx)("img",{src:r,width:"400px",alt:"Mimid controls with overlaid gridlines"}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)("br",{}),"\n",(0,o.jsx)(t.p,{children:"And here's what the default control layout grid looks like."}),"\n",(0,o.jsx)("table",{children:(0,o.jsxs)("tbody",{children:[(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Play Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Play Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Play Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Play Button"})})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Loop Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Loop Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Speed Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Speed Button"})})]}),(0,o.jsxs)("tr",{children:[(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Skip Backward Long Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Skip Backward Short Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Skip Forward Short Button"})}),(0,o.jsx)("td",{style:{textAlign:"center"},children:(0,o.jsx)(t.strong,{children:"Skip Forward Long Button"})})]})]})}),"\n",(0,o.jsx)(t.p,{children:"You can change the number of rows and columns in the grid to get the exact size of buttons that you want.\nFor example, let's say you want the Play Button to take up the top 30% of the controls.\nThen, you would set the number of rows to 10, and set the cells in the first three rows to the Play Button."}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["The number of rows and columns does not change the size of the box that holds the controls.\nAll it does is give you more control over the size of the buttons ",(0,o.jsx)(t.em,{children:"within"})," the controls."]})}),"\n",(0,o.jsx)(t.h3,{id:"rows",children:"Rows"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the number of rows in the controls grid."})}),"\n",(0,o.jsx)(t.h3,{id:"columns",children:"Columns"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the number of columns in the controls grid."})}),"\n",(0,o.jsx)(t.h3,{id:"grid",children:"Grid"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.strong,{children:"Set the individual cells of the controls grid."})}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsx)(t.p,{children:"To set multiple cells to the same button,\nyou only need to set the top-left and bottom-right cells of the area you want.\nMimid will automatically set everything in between to the same cell."})})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>i});var o=n(7294);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);